"""Add user_credits table, add price_per_million_tokens column to usage_limit table

Revision ID: 000000000033
Revises: 000000000032
Create Date: 2024-10-24 14:35:25.857309

"""

import datetime

from decimal import Decimal
from alembic import op
import sqlalchemy as sa
from uuid_extensions import uuid7
from database import PAID_TIER_UUID

# revision identifiers, used by Alembic.
revision = "000000000033"
down_revision = "000000000032"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user_credits",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_profile_id", sa.UUID(), nullable=False),
        sa.Column("credits", sa.Numeric(precision=20, scale=10), nullable=False),
        sa.Column("currency", sa.String(), nullable=False),
        sa.Column("last_credit_calculation_at", sa.DateTime(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("last_updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_profile_id"],
            ["user_profile.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_profile_id", "currency", name="uq_user_credits"),
    )
    op.add_column(
        "usage_limit",
        sa.Column(
            "price_per_million_tokens", sa.Numeric(precision=10, scale=6), nullable=True
        ),
    )

    op.execute(
        f"""
        INSERT INTO usage_tier (id, name, description, created_at, last_updated_at)
        VALUES ('{PAID_TIER_UUID}', 'Unlimited', 'Paid tier', '{datetime.datetime.now(datetime.UTC)}', '{datetime.datetime.now(datetime.UTC)}');
        """
    )
    op.execute(
        f"""
        INSERT INTO usage_limit (id, usage_tier_id, model_name, price_per_million_tokens, max_tokens_per_minute, max_tokens_per_day, max_requests_per_minute, max_requests_per_day, created_at, last_updated_at)
        VALUES ('{uuid7()}', '{PAID_TIER_UUID}', 'neuralmagic/Meta-Llama-3.1-8B-Instruct-FP8', {Decimal("0.08")}, NULL, NULL, NULL, NULL, '{datetime.datetime.now(datetime.UTC)}', '{datetime.datetime.now(datetime.UTC)}');
        """
    )
    op.execute(
        f"""
        INSERT INTO usage_limit (id, usage_tier_id, model_name, price_per_million_tokens, max_tokens_per_minute, max_tokens_per_day, max_requests_per_minute, max_requests_per_day, created_at, last_updated_at)
        VALUES ('{uuid7()}', '{PAID_TIER_UUID}', 'neuralmagic/Meta-Llama-3.1-70B-Instruct-quantized.w4a16', {Decimal("0.79")}, NULL, NULL, NULL, NULL, '{datetime.datetime.now(datetime.UTC)}', '{datetime.datetime.now(datetime.UTC)}');
        """
    )
    op.execute(
        f"""
        INSERT INTO usage_limit (id, usage_tier_id, model_name, price_per_million_tokens, max_tokens_per_minute, max_tokens_per_day, max_requests_per_minute, max_requests_per_day, created_at, last_updated_at)
        VALUES ('{uuid7()}', '{PAID_TIER_UUID}', 'neuralmagic/Meta-Llama-3.1-405B-Instruct-quantized.w4a16', {Decimal("3.5")}, NULL, NULL, NULL, NULL, '{datetime.datetime.now(datetime.UTC)}', '{datetime.datetime.now(datetime.UTC)}');
        """
    )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute(
        f"""
        DELETE FROM usage_limit
        WHERE usage_tier_id = '{PAID_TIER_UUID}';
        """
    )
    op.execute(
        f"""
        DELETE FROM usage_tier 
        WHERE ID = '{PAID_TIER_UUID}';
        """
    )

    op.drop_column("usage_limit", "price_per_million_tokens")
    op.drop_table("user_credits")
    # ### end Alembic commands ###
